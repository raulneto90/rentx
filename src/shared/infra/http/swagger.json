{
  "openapi": "3.0.3",
  "info": {
    "contact": {
      "email": "raulneto90@gmail.com",
      "name": "Raul Neto",
      "url": "https://github.com/raulneto90"
    },
    "title": "Rentx API",
    "description": "Simple api used to rent cars",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "driverLicense": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "User test"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "driverLicense": {
                      "type": "string",
                      "example": "123456"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User e-mail or driver license already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/avatar": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Import image file to update user avatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Avatar update successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": [
          "Cars"
        ],
        "description": "Create a new car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "dailyRate": {
                    "type": "number"
                  },
                  "licensePlate": {
                    "type": "string"
                  },
                  "fineAmount": {
                    "type": "number"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create car successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "Car test"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for car test"
                    },
                    "dailyRate": {
                      "type": "number",
                      "example": 150
                    },
                    "licensePlate": {
                      "type": "string",
                      "example": "ABCD-1234"
                    },
                    "fineAmount": {
                      "type": "number",
                      "example": 50
                    },
                    "brand": {
                      "type": "string",
                      "example": "Brand test"
                    },
                    "categoryId": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Car already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Car already exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/available": {
      "get": {
        "tags": [
          "Cars"
        ],
        "description": "List all available cars",
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "description": "Car brand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Car name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category id linked to car",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "Car test"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for car test"
                    },
                    "dailyRate": {
                      "type": "string",
                      "example": "150"
                    },
                    "available": {
                      "type": "boolean",
                      "example": true
                    },
                    "licensePlate": {
                      "type": "string",
                      "example": "ABCD-1234"
                    },
                    "fineAmount": {
                      "type": "string",
                      "example": "150"
                    },
                    "brand": {
                      "type": "string",
                      "example": "Brand test"
                    },
                    "categoryId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}/specifications": {
      "post": {
        "tags": [
          "Cars"
        ],
        "description": "Create car specifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specificationsId": {
                    "type": "array",
                    "items": {
                      "minItems": 1,
                      "type": "string"
                    },
                    "required": [
                      "specificationsId"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "Car test"
                    },
                    "description": {
                      "type": "string",
                      "example": "Car test description"
                    },
                    "dailyRate": {
                      "type": "string",
                      "example": "150"
                    },
                    "available": {
                      "type": "boolean",
                      "example": true
                    },
                    "licensePlate": {
                      "type": "string",
                      "example": "ABCD-1234"
                    },
                    "fineAmount": {
                      "type": "string",
                      "example": "50"
                    },
                    "brand": {
                      "type": "string",
                      "example": "Brand test"
                    },
                    "categoryId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "datetime"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "datetime"
                    },
                    "specifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string",
                            "example": "Specification test"
                          },
                          "description": {
                            "type": "string",
                            "example": "Description for specification test"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "datetime"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "datetime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new car category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "Category test"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for category test"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category already exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Import a csv file to upload categories",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import categories successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals": {
      "post": {
        "tags": [
          "Rentals"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "carId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "userId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "expectedReturnDate": {
                    "type": "string",
                    "format": "datetime"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Aluguel criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "carId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "expectedReturnDate": {
                      "type": "string",
                      "format": "datetime"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Há aluguel aberto para este carro/usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There's a rental in progress for this user!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Authenticate an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "E-mail or password incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "E-mail or password incorrect"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": [
          "Specifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create a new car specification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create car specification successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "Specification test"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for car specification test"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Specification already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Specification already exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
